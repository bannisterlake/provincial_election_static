{"version":3,"sources":["components/InstantArticle/Declaration.js","components/InstantArticle/InstantArticleApp.js"],"names":["useStyles","makeStyles","root","display","alignItems","fontWeight","alignSelf","fontSize","padding","color","paddingRight","Declaration","props","classes","className","declarationText","styles","main","position","flexDirection","backgroundColor","titleRow","justifyContent","title","majorityMeter","textAlign","seatMap","height","maxHeight","flexWrap","partyMap","seat","margin","flexShrink","paddingBottom","partyContainer","width","paddingTop","letterSpacing","borderRadius","popVote","update","SeatApp","data","useContext","DataContext","useState","seats","setSeats","parties","setParties","setDeclaration","Seat","Date","style","party","el","Party","partyName","id","useEffect","total","partyResults","map","i","j","oldArray","nameShort","votesPercent","votesTotal","votes","config","k","declaration","overallResult","resultText","text"],"mappings":"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","file":"static/js/5.b1c17076.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles=makeStyles({\r\n    root: {\r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        // paddingBottom: 15,\r\n        fontWeight: \"bolder\", \r\n        alignSelf: 'flex-start',\r\n        fontSize: 14,\r\n        padding: 5,\r\n        '& svg': {\r\n            color: 'green',\r\n            fontSize: 20, \r\n            paddingRight: 5\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst Declaration = (props) => {\r\n    const classes = useStyles()\r\n    \r\n\r\n    return (\r\n        <div className={props.declarationText && classes.root}>\r\n            <CheckCircleIcon color=\"green\" />\r\n            {props.declarationText}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Declaration","import React, {useContext, useState, useEffect} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {DataContext} from '../../dataContext'\r\n\r\nimport Declaration from './Declaration'\r\n\r\n\r\nconst styles = makeStyles({\r\n\tmain: {\r\n\t\t// fontFamily: 'Roboto',\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '10px 10px',\r\n\t\tbackgroundColor: '#ededf0'\r\n\t},\r\n\ttitleRow: {\r\n\t\tdisplay: 'flex', \r\n\t\tpadding: '0px 5px',\r\n\t\tjustifyContent: 'space-between', \r\n\t\talignItems: 'center'\r\n\t},\r\n\ttitle: props=> ({\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: 'bold',\r\n\t\tpaddingRight: 20\r\n\t}),\r\n\tmajorityMeter: props => ({\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\ttextAlign: 'right',\r\n\t\tfontSize: 12,\r\n\t}),\r\n\tseatMap: {\r\n\t\tdisplay: 'flex',\r\n\t\theight: 50,\r\n\t\tmaxHeight: 100,\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tpartyMap: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tpadding: '5px 0px'\r\n\t},\r\n\tseat: {\r\n        height: 5, \r\n        // minWidth: '4%',\r\n        margin: '0.1%',\r\n        // backgroundColor:  (props)=>props.color,\r\n        flexShrink: 1,\r\n\t\tfontSize: 16,\r\n\t\tpaddingBottom: 5\r\n\t},\r\n\tpartyContainer: {\r\n        width: '20%',\r\n\t\tpaddingTop: 5,\r\n\t\tdisplay: 'flex',\r\n        alignItems: 'center',\r\n\t\tfontWeight: 'bold',\r\n\t\tflexDirection: 'column',\r\n        fontSize: 12,\r\n        letterSpacing: 2,\r\n        margin: 1,\r\n        borderRadius: 5,\r\n\t\tcolor: 'white',\r\n\t\tjustifyContent: 'space-between'\r\n    },\r\n    popVote:{\r\n        padding: '5px 0px',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n\t},\r\n\tupdate: {\r\n\t\tfontSize: 10\r\n\t}\r\n})\r\n\r\n\r\nexport default function SeatApp() {\r\n\r\n\tconst {data} = useContext(DataContext)\r\n\tconst [seats, setSeats] = useState([])\r\n\tconst [parties, setParties] = useState([])\r\n\tconst [declarationText, setDeclaration] = useState('')\r\n\t\r\n    const seatInfo = {\r\n        total: 338,\r\n        majority: 170\r\n    }\r\n\r\n    const classes = styles()\r\n\r\n\tconst date = new Date()\r\n\r\n\tconst Seat = (props) => {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div key={`${props.party}-${props.el}`} className={classes.seat} style={{backgroundColor: props.color}} />\r\n\t\t);\r\n\t}\r\n\r\n\tconst Party = (props) => {\r\n\t\tconst {party} = props\r\n\t\treturn (\r\n\t\t\t<div key={party.id} className={classes.partyContainer} style={{backgroundColor: party.color}}>\r\n\t\t\t\t<div>{party.partyName}</div>\r\n\t\t\t\t<div className={classes.popVote}> {party.seats} </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n    useEffect(()=> {\r\n        if (data.party) {\r\n\t\t\tlet total = 0\r\n\t\t\tsetSeats([])\r\n\t\t\tsetParties([])\r\n            data.party.partyResults.map((party, i)=>{\r\n\t\t\t\tfor (let j=0; j<party.seats; j++) {\r\n\t\t\t\t\ttotal++\r\n                    setSeats( oldArray=> [ ...oldArray, { party: party.nameShort,  id: j, color: party.color }])\r\n\t\t\t\t}\r\n\t\t\t\tsetParties(oldArray=>[...oldArray, {partyName: party.nameShort,id:i, seats: party.seats, color: party.color,votesPercent: party.votesPercent,votesTotal: party.votes}])\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tif (total < data.config.total) {\r\n\t\t\t\tfor (let k=0; k<data.config.total-total; k++) {\r\n\t\t\t\t\tsetSeats( oldArray=> [ ...oldArray, { party: 'none',  id: k, color: '#e0e0e0' }])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (data.declaration) {\r\n\t\t\tif (data.declaration.overallResult.resultText) {\r\n\t\t\t\tlet text = data.declaration.overallResult.partyName + ' ' + data.declaration.overallResult.resultText;\r\n\t\t\t\tsetDeclaration(text)\t\r\n\t\t\t}\r\n\t\t}\r\n    }, [data])\r\n\r\n    return (\r\n        <div>\r\n            {data.party && \r\n\t\t\t<div className={classes.main}>\r\n\t\t\t\t<div className={classes.titleRow}>\r\n\t\t\t\t\t<div className={classes.title}>{data.config.title}</div>\r\n\t\t\t\t\t{/* {<div className={classes.majorityMeter}>{seatInfo.majority} seats needed for majority \r\n\t\t\t\t\t\t<MajorityMeter seatTotal={seatInfo.total} majority={seatInfo.majority} majorityPercent={(seatInfo.majority/seatInfo.total)*100} data={data.party}/>\r\n\t\t\t\t\t</div>} */}\r\n\t\t\t\t{declarationText && \r\n\t\t\t\t\t<Declaration declarationText={declarationText} />\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.seatMap}>\r\n\t\t\t\t\t{seats.map((seat, i)=>{\r\n\t\t\t\t\t\t\treturn <Seat key={seat.party+'-'+i} party={seat.party} el={seat.id} color={seat.color}/>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.partyMap}>\r\n\t\t\t\t\t{parties.map((party,i)=>{\r\n\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\treturn <Party key={party.id} party={party}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className={classes.update}>Last updated: {date && date.toString()}</div> */}\r\n\t\t    </div>}\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}