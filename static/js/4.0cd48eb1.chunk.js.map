{"version":3,"sources":["components/MapApp/mapContext.js","components/MapApp/Tooltip.js","components/MapApp/Map.js","components/MapApp/Candidate.js","components/MapApp/Results.js","components/MapApp/AccordionBody.js","components/MapApp/Sidebar.js","components/MapApp/App.js"],"names":["MapContext","createContext","initialState","test","zoomCenter","zoom","center","map","geoJSON","selectedRiding","selectedProvince","provinceZoom","menu","provinceData","require","mapReducer","state","action","type","province","riding","console","log","MapContextProvider","props","useReducer","dispatch","useState","setgeoJSON","useParams","prov","year","useEffect","eProv","eYear","fetch","then","res","json","jsonData","key","objects","topojson","convertToGeoJSON","findRiding","features","find","geo","properties","Name","toLowerCase","Provider","value","children","styles","makeStyles","geoTooltip","fontFamily","display","flexDirection","transition","width","wordBreak","whiteSpace","zIndex","tooltipName","fontSize","fontWeight","tooltipPolls","color","paddingBottom","tooltipWinner","backgroundColor","padding","textShadow","letterSpacing","Tooltip","classes","useContext","DataContext","data","id","className","results","pollsReported","pollsTotal","votes","style","partyCode","name","winner","runnerup","toLocaleString","e","getWinningBy","mapRoot","flexGrow","position","declarationDiv","top","textAlign","resetButton","boxShadow","height","alignItems","justifyContent","borderRadius","background","cursor","loading","defaultStyle","weight","fillOpacity","selectedStyle","Map","showBanner","declaration","setDeclaration","geoRef","useRef","selectedRef","tooltipRef","overallResult","partyName","text","resultText","party","partyResults","filter","nameShort","partyNameShort","getGeo","current","eachLayer","layer","options","getBounds","setStyle","fitBounds","resetFeature","feature","handleClick","layerBounds","setTimeout","MapContainer","bounds","config","initBounds","zoomSnap","zoomDelta","whenCreated","TileLayer","attribution","url","LayerGroup","ref","i","getResults","ridingName","fillColor","ridingResults","full","ed","trim","handleFill","GeoJSON","eventHandlers","mouseover","mouseout","click","sticky","counter","border","onClick","candidateRoot","resultsInfo","imageDiv","minWidth","screensize","overflow","bottom","candidateLeftDiv","flex","candidateName","candidateRightDiv","justifySelf","votesDiv","Candidate","candidate","partyData","cachedHeadFilename","alt","onLoad","target","onError","src","split","concat","isIncumbent","percent","isElected","paddingRight","Results","partyInfo","getColor","accordionBody","resultsSummary","AccordionBody","setResults","contest","AccordionDetails","root","title","maxHeight","backButton","minHeight","autoComplete","paddingTop","margin","lineHeight","Sidebar","expanded","setExpanded","scrollingDiv","document","getElementById","menuel","scrollTop","offsetTop","window","scrollTo","Paper","Autocomplete","onChange","event","newValue","newSearch","sort","a","b","getOptionLabel","option","renderInput","params","TextField","disabled","label","variant","Accordion","AccordionSummary","expandIcon","mapAppContainer","mapDiv","sidebarDiv","MapApp","isMobile","setIsMobile","navigator","userAgent"],"mappings":"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","file":"static/js/4.0cd48eb1.chunk.js","sourcesContent":["import React, {useEffect, createContext, useReducer, useState} from 'react'\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport * as topojson from \"topojson-client\";\r\n\r\nexport const MapContext = createContext(null);\r\n\r\n\r\n// const geoJSON = require('./ED_Boundaries_simplified.json')\r\nconst ProvinceData = require('./ProvinceData.json');\r\n\r\nconst initialState = {\r\n    test: true,\r\n    zoomCenter: {\r\n        zoom: 2, \r\n        center: [61,-96.5]\r\n    },\r\n    map: null,\r\n    geoJSON: {},\r\n    selectedRiding: '',\r\n    selectedProvince: '',\r\n    provinceZoom: false,\r\n    menu: 'provinces',\r\n    provinceData: ProvinceData\r\n}\r\n\r\nfunction mapReducer(state, action) {\r\n    switch(action.type) {\r\n        case 'RESET': \r\n            return {\r\n                ...state, \r\n                selectedRiding: null, \r\n                selectedProvince: null,\r\n                provinceZoom: false,\r\n                menu: 'provinces'\r\n            }\r\n        case 'SET_MAP': \r\n            return {\r\n                ...state, \r\n                map: action.map\r\n            }\r\n        case 'CLICK_PROVINCE': \r\n            return {\r\n                ...state, \r\n                selectedProvince: action.province, \r\n                provinceZoom: true,\r\n                menu: action.menu\r\n            }\r\n        case 'CLICK_RIDING': \r\n            return {\r\n                ...state, \r\n                selectedRiding: action.riding,\r\n                selectedProvince: action.province,\r\n                provinceZoom: false,\r\n                menu: 'ridings'\r\n            }\r\n        case 'SET_MENU': \r\n            return {\r\n                ...state, \r\n                menu: action.menu\r\n            }\r\n        case 'SET_PROVINCE':\r\n            console.log('set province')\r\n            return {\r\n                ...state, \r\n                selectedProvince: action.province\r\n            }\r\n    }\r\n}\r\n\r\n\r\nconst MapContextProvider = (props) => {\r\n    const [state, dispatch] = useReducer(mapReducer, initialState)\r\n    const [geoJSON, setgeoJSON] = useState(null)\r\n    const {prov, year, riding} = useParams();\r\n \r\n    const convertToGeoJSON = (jsonData) => {\r\n        if (jsonData.type === \"Topology\") {\r\n            for (let key in jsonData.objects) {\r\n              let geojson = topojson.feature(jsonData, jsonData.objects[key]);\r\n              return geojson\r\n            }\r\n          } else {\r\n            return jsonData;\r\n            \r\n          }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log('mapContext', prov, year, riding)\r\n        let eProv = prov ? prov : \"nb\"\r\n        let eYear = year ? year : \"2020\"\r\n       fetch(`data/${eProv}/data/${eYear}/${eProv}_topo.json`)\r\n            .then(res=>res.json())\r\n            .then(json=>{\r\n                let geoJSON = convertToGeoJSON(json)\r\n                setgeoJSON(geoJSON)\r\n                if (riding) {\r\n                    console.log('riding',riding)\r\n                    const findRiding = geoJSON.features.find(geo=>{\r\n                        console.log(geo.properties.Name.toLowerCase(), riding.toLowerCase())\r\n                        return geo.properties.Name.toLowerCase() === riding.toLowerCase()\r\n                    })\r\n                    console.log('found',findRiding)\r\n                    if (findRiding) {\r\n                        dispatch({type: 'CLICK_RIDING', riding: findRiding.properties.Name})\r\n                    }\r\n                }\r\n            })\r\n        return ()=>{\r\n            console.log('unmount map')\r\n        }\r\n    },[])\r\n    return (\r\n        <MapContext.Provider value={{state, dispatch, geoJSON}}>\r\n            {props.children}\r\n        </MapContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MapContextProvider","import React, {useEffect, useContext} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { DataContext } from '../../dataContext'\r\n\r\nconst styles = makeStyles({\r\n    geoTooltip: {\r\n        fontFamily: 'Roboto, Ubuntu, Helvetica',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        transition: '1s', \r\n        width: 200,\r\n        wordBreak: 'break-word',\r\n        whiteSpace: 'pre-wrap',\r\n        zIndex: 1200\r\n    },\r\n    tooltipName: {\r\n        fontSize: 20,\r\n        fontWeight: 'bolder',\r\n        \r\n    },\r\n    tooltipPolls: {\r\n        fontSize: 14,\r\n        color: 'grey',\r\n        paddingBottom: 10\r\n    },\r\n    tooltipWinner:{\r\n        backgroundColor: props=>props.color,\r\n        color: 'white',\r\n        padding: 5, \r\n        '& #tooltipPartyCode': {\r\n            fontSize: 18\r\n        },\r\n        '& #tooltipWinnerName': {\r\n            fontSize: 20,\r\n            fontWeight: 'bolder',\r\n            textShadow: '1px 1px 0.5px black',\r\n            letterSpacing: 1\r\n            // whiteSpace: 'pre-wrap',\r\n\r\n        },\r\n        '& #tooltipWinningBy' : {\r\n\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst Tooltip = (props) => {\r\n\r\n    const classes = styles(props)\r\n    const {data} = useContext(DataContext)\r\n\r\n    const getWinningBy = () => {\r\n        try {\r\n            let winner = props.results.results[0]\r\n            let runnerup = props.results.results[1]\r\n            if (winner.votes > runnerup.votes) {\r\n                return `Leading by ${(winner.votes - runnerup.votes).toLocaleString('en')} votes`\r\n            }\r\n        } catch (e) {\r\n            // return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"resultsTooltip\" className={classes.geoTooltip}>\r\n            <div id=\"ridingNameTooltip\" className={classes.tooltipName}>{props.riding}</div>\r\n            {props.results && <div id=\"tooltipPartycode\" className={classes.tooltipPolls}>{props.results.pollsReported}/{props.results.pollsTotal} polls reported</div>}\r\n                {props.results && props.results.results[0].votes ? \r\n               <div className={classes.tooltipWinner} style={{backgroundColor: props.color}}>\r\n                    <div id=\"tooltipPartycode\">{props.results.results[0].partyCode}</div>\r\n                    <div id=\"tooltipWinnerName\">{props.results.results[0].name}</div>\r\n                    <div id=\"tooltipWinningBy\">{getWinningBy()}</div>\r\n                </div>\r\n\r\n                : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React, {useContext, useState, useEffect, useRef} from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport {useParams} from 'react-router-dom'\r\nimport * as topojson from \"topojson-client\";\r\n\r\nimport {MapContainer, GeoJSON, TileLayer, Tooltip, Marker, SVGOverlay, Popup, LayerGroup} from 'react-leaflet'\r\n\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap'\r\n\r\nimport { MapContext } from './mapContext';\r\nimport { DataContext } from '../../dataContext'\r\n\r\nimport MyTooltip from './Tooltip'\r\nimport zIndex from '@material-ui/core/styles/zIndex'\r\n\r\nconst styles = makeStyles({\r\n    mapRoot: {\r\n        flexGrow: 1, \r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        position: 'relative'\r\n    },\r\n    declarationDiv: {\r\n        position: 'absolute', \r\n        width: '100%',\r\n        zIndex: 100,\r\n        top: 0,\r\n        padding: '5px 0px',\r\n        color: 'white', \r\n        textShadow: '1px 1px black', \r\n        fontWeight: 600,\r\n        textAlign: 'center'\r\n    },\r\n    resetButton: {\r\n        display: 'flex',\r\n        boxShadow: '0 1px 4px rgba(0,0,0,0.65)',\r\n        height: 30,\r\n        width: 30,\r\n        fontSize: '1.7rem !important',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        background: '#FFFFFF',\r\n        cursor: 'pointer',  \r\n        color: 'black'  \r\n    },  \r\n    loading: {\r\n        position: 'absolute', \r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        zIndex: 500\r\n    }\r\n})\r\n\r\nconst defaultStyle={\r\n    weight: 0.6,\r\n    fillOpacity: 0.8,\r\n    color: 'black',\r\n}\r\n\r\nconst selectedStyle = {\r\n    weight: 0.8,\r\n    fillOpacity: 0.9\r\n}\r\n\r\nconst Map = ({showBanner}) => {\r\n    const classes = styles()\r\n    const {state, dispatch, geoJSON} = useContext(MapContext)\r\n    const {data} = useContext(DataContext)\r\n    const [declaration, setDeclaration] = useState(null)\r\n\r\n    const geoRef = useRef(null)\r\n    const selectedRef = useRef(null)\r\n    const tooltipRef = useRef(null)\r\n\r\n    useEffect(()=> {\r\n        if (data.declaration.overallResult.partyName) {\r\n            const text = data.declaration.overallResult.partyName + \" \" + data.declaration.overallResult.resultText;\r\n            let color;\r\n            let party = data.party.partyResults.filter(party=>{\r\n                return party.nameShort === data.declaration.overallResult.partyNameShort\r\n            })[0]\r\n            if (party) {\r\n                color = party.color\r\n            } else {\r\n                color = '#C0C0C0'\r\n            }\r\n            setDeclaration({text, color})\r\n        }\r\n    }, [data])\r\n\r\n    // useEffect(() => {\r\n    //     if (state.map) {\r\n    //         if (state.selectedProvince && state.provinceZoom) {\r\n    //             let prov = state.provinceData.prov.filter(province=> province.name === state.selectedProvince)[0]\r\n    //             setTimeout(() => {\r\n    //                 state.map.fitBounds(prov.coordinates)                    \r\n    //             }, 500);\r\n    //         } \r\n    //         else if (!state.selectedProvince) {\r\n    //             state.map.fitBounds([[83.1355, -52.619], [41.711, -141.028]])\r\n    //         } \r\n    //     }\r\n    // }, [state.selectedProvince])\r\n\r\n    useEffect(()=> {\r\n        try {\r\n            if (state.map)  {\r\n                if (state.selectedRiding) {\r\n                    let getGeo=''\r\n                    geoRef.current.eachLayer(layer=>{\r\n                        if (layer.options.name.toLowerCase() === state.selectedRiding.toLowerCase()) {\r\n                            getGeo = layer\r\n                        }\r\n                    })\r\n                    if (getGeo.getBounds()) {\r\n                        getGeo.setStyle(selectedStyle)\r\n                        selectedRef.current = getGeo\r\n                        state.map.fitBounds(getGeo.getBounds())\r\n                    }\r\n                }\r\n            }    \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }, [state.selectedRiding])\r\n\r\n    const handleSetMap = (e) => {\r\n        // e.options.minZoom = e.getZoom()\r\n        dispatch({type: 'SET_MAP', map: e})\r\n    }\r\n\r\n    const resetBounds = () => {\r\n        if (selectedRef.current) {\r\n            selectedRef.current.setStyle(defaultStyle)\r\n            selectedRef.current = null\r\n        }\r\n        state.map.fitBounds(data.config.initBounds)\r\n        dispatch({type: 'RESET'})\r\n    }\r\n\r\n\r\n    const handleFill = (ridingName) => {\r\n        \r\n        let fillColor = 'lightgrey'\r\n        try {\r\n            let ridingResults = data.full.data.filter(ed=>{\r\n                return ed.name.toLowerCase().trim() === ridingName.toLowerCase().trim()\r\n            })[0]\r\n            \r\n            let party = data.party.partyResults.filter(party=>{\r\n                return party.nameShort === ridingResults.results[0].partyCode\r\n            })[0]\r\n            if (party) {\r\n                if (ridingResults.results[0].votes) {\r\n                    fillColor = party.color\r\n                } else {\r\n                    fillColor = '#C0C0C0'\r\n                }\r\n            } else {\r\n                fillColor = '#C0C0C0'\r\n            }\r\n            if (ridingResults.results[0].partyCode === 'PC') {\r\n                fillColor = 'rgb(0, 51, 153)'\r\n            }\r\n            return {results: ridingResults, color: fillColor}\r\n        } catch (e) {\r\n            console.log('error fill', e)\r\n            return  {results: null, color: 'lightgrey'}\r\n        }\r\n    }\r\n\r\n    function resetFeature(e) {\r\n        if (selectedRef.current) {\r\n            if (e.layer.feature.properties.Name === selectedRef.current.options.name) {\r\n                return;\r\n            }\r\n        } \r\n        e.layer.setStyle(defaultStyle)\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        try {\r\n            console.log(e)\r\n            if (selectedRef.current) {\r\n                console.log('tooltip', selectedRef.current.options.name, e.layer.options.name)\r\n\r\n                if (selectedRef.current.options.name !== e.layer.options.name) {\r\n                    selectedRef.current.setStyle(defaultStyle)\r\n                }\r\n            }\r\n\r\n            var layer = e.layer\r\n            selectedRef.current = e.layer;\r\n            var layerBounds = e.layer.getBounds();\r\n            state.map.fitBounds(layerBounds)\r\n            setTimeout(()=> {\r\n                dispatch({type: 'CLICK_RIDING', riding: layer.feature.properties.Name})\r\n            },500)\r\n\r\n        } catch(e) {\r\n            console.log('error click', e)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.mapRoot} >\r\n            {(declaration && showBanner) && <div className={classes.declarationDiv} style={{background: declaration.color}}>{declaration.text}</div>}\r\n            <MapContainer \r\n                bounds={data.config.initBounds ? data.config.initBounds :[[83.1355, -52.619], [41.711, -141.028]]}\r\n                zoomSnap={0.25}\r\n                zoomDelta={0.25}\r\n                whenCreated={handleSetMap}\r\n                // maxZoom={13}\r\n                >\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"\"\r\n                    />\r\n                    <LayerGroup ref={geoRef}>\r\n                    {geoJSON ? geoJSON.features.map((geo,i)=> {\r\n                        // console.log(geo.properties.Name)\r\n                        const getResults = handleFill(geo.properties.Name )\r\n                        const generateKey = () => {\r\n                            // return geo.properties.Name\r\n                            return `${geo.properties.Name}-${getResults.color}`\r\n                        }\r\n                        return <GeoJSON\r\n                            data={geo}\r\n                            // key={generateKey()}\r\n                            name={geo.properties.Name}\r\n                            style={()=>{return ({\r\n                                weight: 0.6,\r\n                                fillOpacity: 0.8,\r\n                                color: 'black',\r\n                                fillColor: getResults.color\r\n                                })}\r\n                            }\r\n                            eventHandlers={{\r\n                                mouseover: (e)=>e.layer.setStyle(selectedStyle),\r\n                                mouseout: resetFeature,\r\n                                click: handleClick,\r\n                            }}\r\n                        >\r\n                            <Tooltip \r\n                                key={`${data.counter}-${i}`}\r\n                                sticky \r\n                                ref={tooltipRef}\r\n                                >\r\n                                    <MyTooltip results={getResults.results} color={getResults.color} riding={geo.properties.Name}/>\r\n                            </Tooltip>\r\n                        </GeoJSON>\r\n                    }): <div className={classes.loading}>\r\n                           <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> \r\n                        </div>}\r\n                    </LayerGroup>\r\n                <div style={{top: 90}} className={'leaflet-top leaflet-left'}>\r\n                    <div  className='leaflet-control'>\r\n                        {/* <button onClick={()=>console.log(state.map.getBounds())}>get bounds</button> */}\r\n               \r\n                        <a id=\"zoomOut\" \r\n                            style={{color: 'black !important', border: '2px solid rgba(0,0,0,0.25)'}} \r\n                            className={`leaflet-control-zoom leaflet-bar ${classes.resetButton}`} \r\n                            onClick={resetBounds}\r\n                            >\r\n                            <ZoomOutMapIcon />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nconst styles = makeStyles({\r\n    candidateRoot: {\r\n        position: 'relative',\r\n        display: 'flex', \r\n        flexDirection: 'row',\r\n        height: 100,\r\n        padding: '5px 0'\r\n    },\r\n    resultsInfo: {\r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        '& #pollsReported': {\r\n            fontSize: 12,\r\n            fontWeight: 'bolder'\r\n        },\r\n        '& #totalVotes': {\r\n            fontSize: 10,\r\n            color: 'darkslategrey'\r\n        }\r\n    },\r\n    imageDiv: {\r\n        height: '100%',\r\n        position: 'relative',\r\n        // marginBottom: 25,\r\n        minWidth: 50,\r\n        width: props=>props.screensize < 700 ? 50 : 70,\r\n        borderRadius: '8px',\r\n        overflow: 'hidden',\r\n        '& #imageContainer': {\r\n            width: '100%',\r\n            height: '85px',\r\n            background: 'white',\r\n            borderRadius: 4\r\n\r\n        },\r\n        '& #partyCode': {\r\n            position: 'absolute', \r\n            bottom: 8,\r\n            color: 'white',\r\n            width: '100%',\r\n            textAlign: 'center'\r\n        },\r\n        '& img': {\r\n            width: '100%',\r\n            transition: 'width 500ms'\r\n        }\r\n    },\r\n    candidateLeftDiv: {\r\n        flex: 3, \r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        position: 'relative', \r\n        // justifyContent: 'space-between',\r\n        padding: '10px 0 10px 10px',\r\n\r\n        '& #candidateIncumbent': {\r\n            fontSize: 13,\r\n            fontWeight: 'lighter',\r\n            position: 'absolute' , \r\n            bottom: 0\r\n        }\r\n    },\r\n    candidateName: {\r\n        '& #candidateFirst': {\r\n            fontWeight: 'bolder',\r\n            fontSize: props=>props.screensize < 700 ? 12 : 14,\r\n\r\n        },\r\n        '& #candidateLast': {\r\n            fontWeight: 'bolder',\r\n            fontSize: 16,\r\n        }\r\n    }, \r\n    candidateRightDiv: {\r\n        flex: 2, \r\n        justifySelf: 'flex-end',\r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        padding: '10px 0',\r\n        justifyContent: 'space-between',\r\n        '& #candidateElected': {\r\n            display: 'flex', \r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            fontSize: props=>props.screensize < 700 ? 12 : 14,\r\n        }\r\n    },\r\n    votesDiv: {\r\n        textAlign: 'right',\r\n        '& #votesPercent': {\r\n            fontSize: props=>props.screensize < 700 ? 16 : 22,\r\n            fontWeight: 'bolder'\r\n        },\r\n        '& #votesTotal': {\r\n            fontSize: props=>props.screensize < 700 ? 12 : 14,\r\n            fontWeight: 'lighter'\r\n        }\r\n    }\r\n})\r\n\r\nconst Candidate = (props) => {\r\n\r\n    const classes = styles()\r\n\r\n    const {candidate, partyData} = props;\r\n    const {prov, year} = useParams();\r\n\r\n    return (\r\n        <div key={props.id} className={classes.candidateRoot}>\r\n            <div style={{backgroundColor: partyData.color}} className={classes.imageDiv}>\r\n                {/* <img ref={imgRef} alt=\"Candidate Headshot\" name={candidate.name} onLoad={e=>e.target.style.width = \"100%\"} onError={(e) => { e.target.onError = null; e.target.src =`/img/no_headshot.png`}} src={`/image/${props.prov}/${candidate.cachedHeadFilename}`}/> */}\r\n                <div id=\"imageContainer\"> \r\n                    {console.log(`data/${prov}/headshots/${candidate.cachedHeadFilename}`)}\r\n                    <img alt=\"Candidate Headshot\" onLoad={e=>e.target.style.width = \"100%\"} onError={(e) => { e.target.onError = null; e.target.src =`data/img/no_headshot.png`}} src={`data/${prov}/headshots/${candidate.cachedHeadFilename.split('.')[0].concat('.jpg')}`}/>\r\n                </div>\r\n                {/* {(orientation) && <div id=\"partyCode\" style={{fontWeight: 'bolder',color: partyData.color === '#C0C0C0' ? 'black' : 'white' }}>{candidate.partyCode}</div>} */}\r\n            </div>\r\n            <div className={classes.candidateLeftDiv}>\r\n                <div className={classes.candidateName}>\r\n                    <div id=\"candidateLast\">{candidate.name}</div>\r\n                    {/* <div id=\"candidateFirst\">{candidate.firstName}</div>\r\n                    <div id=\"candidateLast\" >{candidate.lastName}</div> */}\r\n                </div>\r\n                <div id=\"partyCode\" style={{fontWeight: 'bolder',color: partyData.color}}>{candidate.partyCode}</div>\r\n\r\n                <div id=\"candidateIncumbent\">{candidate.isIncumbent && 'Incumbent'}</div>\r\n            </div>\r\n            <div className={classes.candidateRightDiv}>\r\n                <div className={classes.votesDiv}>\r\n                    <div id='votesPercent'>{candidate.percent}%</div>\r\n                    <div id='votesTotal'>{candidate.votes.toLocaleString('en')} total votes</div>\r\n                </div>\r\n                {candidate.isElected ? <div id=\"candidateElected\">\r\n                    <CheckCircleIcon style={{paddingRight: 5, fontSize: 14, color: 'green'}} /> Elected\r\n                </div>\r\n                :\r\n                <div style={{fontSize: 14}}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Candidate","import React, {useContext, useEffect} from 'react'\r\n\r\nimport {DataContext} from '../../dataContext'\r\n\r\nimport Candidate from './Candidate'\r\n\r\nconst Results = (props) => {\r\n    const {data} = useContext(DataContext)\r\n\r\n    const getColor = (candidate) => {\r\n        const partyCode = candidate.partyCode\r\n        let partyInfo = data.party.partyResults.filter(party => {\r\n            return party.nameShort === partyCode\r\n        })[0]\r\n        console.log('results',partyCode,partyInfo)\r\n        if (partyInfo) {\r\n            return partyInfo\r\n        } else if (partyCode === 'PC') {\r\n            return {\r\n                color: \"rgb(0, 51, 153)\",\r\n                name: \"Progressive Conservative\",\r\n                nameShort: \"PC\"\r\n            }\r\n        } else\r\n        return {\r\n            color: \"#C0C0C0\",\r\n            name: \"Other\",\r\n            nameShort: \"OTH\"\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        {/* {console.log('here')} */}\r\n        {props.results.results.map((candidate,i)=>{\r\n            const partyData = getColor(candidate)\r\n            return (\r\n                <div key={candidate.id}>\r\n                    <Candidate id={i} candidate={candidate} partyData={partyData}/>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Results","import React, {useEffect, useState, useContext} from 'react'\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport Results from './Results'\r\nimport { DataContext } from '../../dataContext';\r\n\r\nconst styles = makeStyles({\r\n    accordionBody: {\r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        width: '100%'\r\n    },\r\n    resultsSummary: {\r\n        display: 'flex', \r\n        flexDirection: 'row', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between', \r\n        paddingBottom: 10,\r\n        '& #polls': {\r\n            fontSize: 12,\r\n            fontWeight: 600\r\n        },\r\n        '& #votes': {\r\n            fontSize: 12,\r\n            fontWeight: 600\r\n        }\r\n    }\r\n})\r\n\r\nconst AccordionBody = (props) => {\r\n    const classes = styles()\r\n\r\n    const [results, setResults] = useState(null)\r\n\r\n    const {data} = useContext(DataContext)\r\n\r\n\r\n    const getResults =  () => {\r\n        let contest =  data.full.data.filter(contest => contest.name === props.riding)[0]\r\n        setResults(contest)\r\n   }\r\n\r\n    useEffect(() => {\r\n        getResults();\r\n        return () => {\r\n            setResults(null)\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getResults();\r\n        return () => {\r\n            setResults(null)\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <AccordionDetails key={props.id} >\r\n        {results && \r\n            <div className={classes.accordionBody}>\r\n            <div className={classes.resultsSummary}>\r\n                <div id=\"polls\">{results.pollsReported}/{results.pollsTotal} polls reporting</div>\r\n                <div id=\"votes\">{results.votes.toLocaleString('en')} total votes</div>\r\n            </div>\r\n            <Results results={results} />\r\n            </div>\r\n\r\n        }\r\n        </AccordionDetails>\r\n    )\r\n}\r\n\r\nexport default AccordionBody","import React, {useContext, useState, useEffect} from 'react'\r\nimport {IconButton, Paper, makeStyles, TextField} from '@material-ui/core'\r\n\r\nimport {\r\n    useParams\r\n} from 'react-router-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {Autocomplete} from '@material-ui/lab'\r\n\r\nimport AccordionBody from './AccordionBody'\r\n\r\nimport {MapContext} from './mapContext'\r\nimport {DataContext} from '../../dataContext'\r\n\r\nconst styles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden'\r\n    }, \r\n    title: {\r\n        backgroundColor: '#9e9e9e',\r\n        boxShadow: '-1px 1px 2px 0px black',\r\n        zIndex: 402,\r\n        fontSize: 26,\r\n        fontWeight: 600,\r\n        color: 'white',\r\n        maxHeight: 80,\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        textAlign: 'center',\r\n        padding: '10px 5px',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    results: {\r\n        backgroundColor: 'white',\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        height: '100%'\r\n    },\r\n    accordionBody: {\r\n        display: 'flex', \r\n        flexDirection: 'column'\r\n    },\r\n    resultsSummary: {\r\n        display: 'flex', \r\n        justifyContent: 'space-between',\r\n        alignItems: 'center', \r\n        fontSize: 14,\r\n        fontWeight: 600,\r\n        '& #votes': {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    backButton: {\r\n        minHeight: '48px',\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        paddingRight: 2, \r\n    },\r\n    autoComplete: {\r\n        width: '100%',\r\n        height: 65,\r\n        display: 'flex',\r\n        // position: 'sticky', \r\n        // top: 0,\r\n        paddingTop: 6,\r\n        backgroundColor: 'white', \r\n        zIndex: 100,\r\n        alignItems: 'center',\r\n        '& .MuiAutocomplete-root': {\r\n            width: '95% !important',\r\n            margin: '6px 6px 6px 6px',\r\n            flexGrow: 1\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            // padding: '3px !important'\r\n        }, \r\n        '& .MuiFormLabel-root': {\r\n            lineHeight: 1\r\n        },\r\n    }\r\n})\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const {state, dispatch} = useContext(MapContext)\r\n    const {data} = useContext(DataContext)\r\n\r\n    const [expanded, setExpanded] = useState('')\r\n    const classes = styles();\r\n\r\n    useEffect(() => {\r\n        setExpanded(state.selectedRiding)\r\n        return ()=> {\r\n            setExpanded('')\r\n        }\r\n        \r\n    }, [state.selectedRiding])\r\n\r\n    // useEffect(()=> {\r\n    //     if (state.menu === 'provinces') {\r\n    //         setOffset(44)\r\n    //     } else if (state.menu === 'ridings' && !state.selectedRiding) {\r\n    //         setOffset(90)\r\n    //     }\r\n    // }, [state.menu])\r\n\r\n    useEffect(()=> {\r\n        if (expanded) {\r\n            setTimeout(()=> {\r\n                console.log(state.selectedRiding)\r\n                var scrollingDiv = document.getElementById(\"ridingMenu\")\r\n                let menuel = document.getElementById(state.selectedRiding);\r\n                if (menuel) {\r\n                    scrollingDiv.scrollTop = menuel.offsetTop\r\n                    window.scrollTo(0,0)\r\n                }\r\n                console.log(scrollingDiv, menuel)\r\n                \r\n            }, 200)\r\n        } else {\r\n            var scrollingDiv = document.getElementById(\"ridingMenu\")\r\n            scrollingDiv.scrollTop = 0\r\n        }\r\n    }, [expanded])\r\n\r\n    const handleAccordion = (riding) => {\r\n        if (expanded === riding) {\r\n            setExpanded('')\r\n        } else \r\n        setExpanded(riding)\r\n        dispatch({type: 'CLICK_RIDING', riding: riding, province: state.selectedProvince})\r\n    }\r\n\r\n    const handleSearch = (newSearch) => {\r\n        if (newSearch) {\r\n            dispatch({type: 'CLICK_RIDING', riding: newSearch.name})            \r\n        }\r\n\r\n        // if( /Android|webOS|iPhone|iPad|Mac|Macintosh|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div id=\"sidebarTitle\" className={classes.title}>\r\n                <div >\r\n                    {state.menu === \"provinces\" ? \"Select a Province to filter Ridings\" : \"Select a riding to view results\"}\r\n                </div>\r\n            </div>\r\n            <div className={classes.results}>\r\n                <div className=\"menu\">\r\n                    <Paper key=\"autocomplete\" className={classes.autoComplete}>\r\n                        <Autocomplete\r\n                            id=\"combo-box-demo\"\r\n                            onChange={(event, newValue) => {\r\n                                handleSearch(newValue)\r\n                                }}\r\n                            options={data.full.data.sort((a, b)=> {\r\n                                if (a.name > b.name) {\r\n                                    return 1\r\n                                } else return -1\r\n                            })}\r\n                            getOptionLabel={(option) => option.name}\r\n                            style={{ width: 300 }}\r\n                            renderInput={(params) => <TextField id=\"autocompleteTextfield\" disabled {...params} label={`Search Ridings`} variant=\"outlined\" />}\r\n                            />\r\n                    </Paper>\r\n                    <div  className=\"scrollingDiv ridingMenu\" id=\"ridingMenu\">\r\n                        {data.full.data.sort((a, b)=> {\r\n                            if (a.name > b.name) {\r\n                                return 1\r\n                            } else return -1\r\n                        })\r\n                        .map(contest=>{\r\n                            return (\r\n                                <Accordion key={contest.id} id={contest.name} expanded={expanded === contest.name} onChange={()=>handleAccordion(contest.name)}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1bh-content\"\r\n                                        id=\"panel1bh-header\"\r\n                                    >\r\n                                        {contest.name}\r\n                                    </AccordionSummary>\r\n                                    {expanded === contest.name ? <AccordionBody id={contest.id} riding={contest.name}/> : <div />}\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n","import React, { useContext, Suspense, useState, useEffect } from 'react'\r\nimport {\r\n    useParams\r\n} from 'react-router-dom'\r\nimport {makeStyles} from '@material-ui/core'\r\n\r\nimport MapContextProvider, { MapContext } from './mapContext';\r\n\r\nimport Map from './Map'\r\n// import Test from './Test'\r\nimport Sidebar from './Sidebar'\r\nimport { DataContext } from '../../dataContext';\r\n\r\n\r\nconst styles = makeStyles({\r\n    mapAppContainer: {\r\n        display: 'flex',\r\n        position: 'relative', \r\n        height: '100%'\r\n    },\r\n    mapDiv: {\r\n        display: 'flex', \r\n        flex: 5,\r\n        minHeight: 200,\r\n        flexGrow: 4,\r\n    }, \r\n    sidebarDiv: {\r\n        backgroundColor: 'lightgrey',\r\n        position: 'relative', \r\n        height: '100%', \r\n        flex: 4,\r\n        flexGrow: 3,\r\n        boxShadow: '2px 2px 15px 0px black',\r\n        zIndex: 401,\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\nexport default function MapApp({showBanner}) {\r\n    const [selectedRiding, setSelected] = useState('')\r\n    const [isMobile, setIsMobile] = useState(false)\r\n    \r\n    const [geoJSON, setgeoJSON] = useState(null)\r\n\r\n    const {data} = useContext(DataContext)\r\n    const classes = styles();\r\n\r\n    const {riding} = useParams()\r\n\r\n    useEffect(()=> {\r\n        if (/Android|webOS|iPhone|iPad|Mac|Macintosh|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n            setIsMobile(true)\r\n        }\r\n    },[])\r\n    \r\n  \r\n\r\n    return (\r\n        <div id=\"mapAppContainer\" className={classes.mapAppContainer}>\r\n            {(data.full) && \r\n            <MapContextProvider>\r\n                 {!(isMobile && riding) && \r\n                 \r\n                 <div className={classes.mapDiv}>\r\n                   <Map showBanner={showBanner} selectedRiding={selectedRiding} />\r\n                </div>}\r\n                <div id=\"sideBarDiv\" className={classes.sidebarDiv}>\r\n                    <Sidebar selectedRiding={selectedRiding}/>\r\n                </div>\r\n            </MapContextProvider>\r\n        }\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}